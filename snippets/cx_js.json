// https://mp.weixin.qq.com/debug/wxadoc/dev/api/
{
    "cx-app-onLaunch": {
        "prefix": "cx-app-onLaunch",
        "body": [
            "onLaunch: function() {",
            "$1",
            "},"
        ],
        "description": "监听小程序初始化"
    },
    "cx-app-onShow": {
        "prefix": "cx-app-onShow",
        "body": [
            "onShow: function() {",
            "$1",
            "},"
        ],
        "description": "监听小程序显示"
    },
    "cx-app-onHide": {
        "prefix": "cx-app-onHide",
        "body": [
            "onHide: function() {",
            "$1",
            "},"
        ],
        "description": "监听小程序隐藏"
    },
    "cx-app-onError": {
        "prefix": "cx-app-onError",
        "body": [
            "onError: function(msg) {",
            "$1",
            "},"
        ],
        "description": "错误监听函数"
    },
    "cx-app-globalData": {
        "prefix": "cx-app-globalData",
        "body": [
            "globalData: {",
            "$1",
            "},"
        ],
        "description": ""
    },
    "cx-getApp": {
        "prefix": "cx-getApp",
        "body": "const APP = getApp();",
        "description": ""
    },
    "cx-page-data": {
        "prefix": "cx-page-data",
        "body": [
            "data: {",
            "$1",
            "},"
        ],
        "description": "页面的初始数据"
    },
    "cx-page-onLoad": {
        "prefix": "cx-page-onLoad",
        "body": [
            "onLoad: function(options) {",
            "$1",
            "},"
        ],
        "description": "监听页面加载"
    },
    "cx-page-onReady": {
        "prefix": "cx-page-onReady",
        "body": [
            "onReady: function() {",
            "$1",
            "},"
        ],
        "description": "监听页面初次渲染完成"
    },
    "cx-page-onShow": {
        "prefix": "cx-page-onShow",
        "body": [
            "onShow: function() {",
            "$1",
            "},"
        ],
        "description": "监听页面显示"
    },
    "cx-page-onHide": {
        "prefix": "cx-page-onHide",
        "body": [
            "onHide: function() {",
            "$1",
            "},"
        ],
        "description": "监听页面隐藏"
    },
    "cx-page-onUnload": {
        "prefix": "cx-page-onUnload",
        "body": [
            "onUnload: function() {",
            "$1",
            "},"
        ],
        "description": "监听页面卸载"
    },
    "cx-page-onPullDownRefresh": {
        "prefix": "cx-page-onPullDownRefresh",
        "body": [
            "onPullDownRefresh: function() {",
            "$1",
            "},"
        ],
        "description": "监听用户下拉动作"
    },
    "cx-page-onReachBottom": {
        "prefix": "cx-page-onReachBottom",
        "body": [
            "onReachBottom: function() {",
            "$1",
            "},"
        ],
        "description": "页面上拉触底事件的处理函数"
    },
    "cx-page-onShareAppMessage": {
        "prefix": "cx-page-onShareAppMessage",
        "body": [
            "onShareAppMessage: function() {",
            "return {",
            "title: '$title',",
            "desc: '$desc',",
            "path: '$path'",
            "}",
            "},"
        ],
        "description": "用户点击右上角分享"
    },
    "cx-that": {
        "prefix": "cx-that",
        "body": "let that = this;",
        "description": ""
    },
    "cx-setData": {
        "prefix": "cx-setData",
        "body": [
            "that.setData({",
            "$1",
            "});"
        ],
        "description": ""
    },
    "cx-getCurrentPages": {
        "prefix": "cx-getCurrentPages",
        "body": "const PAGES = getCurrentPages();",
        "description": ""
    },
    "cx-exports": {
        "prefix": "cx-exports",
        "body": "module.exports = $1;",
        "description": ""
    },
    "cx-require": {
        "prefix": "cx-require",
        "body": "const $1 = require('$module');",
        "description": ""
    },
    "cx-map-markers": {
        "prefix": "cx-map-markers",
        "body": [
            "markers: [{",
            "id: $id,//标记点id",
            "longitude: $longitude,//经度",
            "latitude: $latitude,//纬度",
            "title: '$title,'//标注点名",
            "iconPath: '$iconPath',//显示的图标",
            "rotate: $rotate,//旋转角度",
            "alpha: $alpha,//标注的透明度",
            "width: $width,//标注图标宽度",
            "height: $height//标注图标高度",
            "}]"
        ],
        "description": "标记点用于在地图上显示标记的位置"
    },
    "cx-map-markers-must": {
        "prefix": "cx-map-markers-must",
        "body": [
            "markers: [{",
            "longitude: $longitude,//经度",
            "latitude: $latitude,//纬度",
            "iconPath: '$iconPath'//显示的图标",
            "}]"
        ],
        "description": "标记点用于在地图上显示标记的位置"
    },
    "cx-map-polyline-must": {
        "prefix": "cx-map-polyline-must",
        "body": [
            "polyline: [{",
            "points: [{",
            "longitude: $longitude,",
            "latitude: $latitude",
            "}]//经纬度数组",
            "}]"
        ],
        "description": "指定一系列坐标点，从数组第一项连线至最后一项"
    },
    "cx-map-polyline": {
        "prefix": "cx-map-polyline",
        "body": [
            "polyline: [{",
            "points: [{",
            "longitude: $longitude,",
            "latitude: $latitude",
            "}],//经纬度数组",
            "color: '$color',//线的颜色",
            "width: $width,//线的宽度",
            "dottedLine: $dottedLine//是否虚线",
            "}]"
        ],
        "description": "指定一系列坐标点，从数组第一项连线至最后一项"
    },
    "cx-map-circles-must": {
        "prefix": "cx-map-circles-must",
        "body": [
            "circles: [{",
            "longitude: $longitude,//经度",
            "latitude: $latitude,//纬度",
            "radius: $radius//半径",
            "}]"
        ],
        "description": "在地图上显示圆"
    },
    "cx-map-circles": {
        "prefix": "cx-map-circles",
        "body": [
            "circles: [{",
            "longitude: $longitude,//经度",
            "latitude: $latitude,//纬度",
            "radius: $radius,//半径",
            "color: '$color',//描边的颜色",
            "fillColor: '$fillColor',//填充颜色",
            "strokeWidth: $strokeWidth//描边的宽度",
            "}]"
        ],
        "description": "在地图上显示圆"
    },
    "cx-map-controls-must": {
        "prefix": "cx-map-controls-must",
        "body": [
            "controls: [{",
            "iconPath: '$iconPath',//显示的图标",
            "position: {",
            "left: $left,",
            "top: $top,",
            "width: $width,",
            "height: $height",
            "}//控件在地图的位置",
            "}]"
        ],
        "description": "在地图上显示控件，控件不随着地图移动"
    },
    "cx-map-controls": {
        "prefix": "cx-map-controls",
        "body": [
            "controls: [{",
            "id: $id,//控件id",
            "position: {",
            "left: $left,",
            "top: $top,",
            "width: $width,",
            "height: $height",
            "},//控件在地图的位置",
            "iconPath: '$iconPath',//显示的图标",
            "clickable: $clickable//是否可点击",
            "}]"
        ],
        "description": "在地图上显示控件，控件不随着地图移动"
    },
    "cx-request": {
        "prefix": "cx-request",
        "body": [
            "wx.request({",
            "url: '$url',",
            "method: '$GET',",
            "data: {",
            "$1",
            "},",
            "success: function(res) {",
            "//res.data",
            "$2",
            "$2",
            "},",
            "fail: function(err){}",
            "complete: function(){}",
            "});"
        ],
        "description": "HTTPS 请求。"
    },
    "cx-request-full": {
        "prefix": "cx-request-full",
        "body": [
            "wx.request({",
            "url: '$url',",
            "method: '$GET',",
            "data: {",
            "$1",
            "},",
            "header: {}",
            "dataType: 'json'",
            "success: function(res) {",
            "//res.data",
            "$2",
            "},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "HTTPS 请求。"
    },
    "cx-uploadFile": {
        "prefix": "cx-uploadFile",
        "body": [
            "wx.uploadFile({",
            "url: '$url',",
            "filePath: '$filePath',",
            "name: '$name',",
            "formData: {,",
            "$1",
            "},",
            "success: function(res) {",
            "//res.data",
            "$2",
            "},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "将本地资源上传到开发者服务器。"
    },
    "cx-uploadFile-full": {
        "prefix": "cx-uploadFile-full",
        "body": [
            "wx.uploadFile({",
            "url: '$url',",
            "filePath: '$filePath',",
            "name: '$name',",
            "formData: {,",
            "$1",
            "},",
            "header: {}",
            "success: function(res) {",
            "//res.data",
            "$2",
            "},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "将本地资源上传到开发者服务器。"
    },
    "cx-downloadFile": {
        "prefix": "cx-downloadFile",
        "body": [
            "wx.downloadFile({",
            "url: '$url',",
            "success: function(res) {",
            "//res.tempFilePath",
            "$1",
            "},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "下载文件资源到本地"
    },
    "cx-downloadFile-full": {
        "prefix": "cx-downloadFile-full",
        "body": [
            "wx.downloadFile({",
            "url: '$url',",
            "header: {}",
            "success: function(res) {",
            "//res.tempFilePath",
            "$1",
            "},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "下载文件资源到本地"
    },
    "cx-connectSocket": {
        "prefix": "cx-connectSocket",
        "body": [
            "wx.connectSocket({",
            "url: '$url',",
            "method: '$GET'",
            "data: {",
            "$1",
            "},",
            "success: function(res) {",
            "//res.data",
            "$2",
            "},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "创建一个 WebSocket 连接"
    },
    "cx-connectSocket-full": {
        "prefix": "cx-connectSocket-full",
        "body": [
            "wx.connectSocket({",
            "url: '$url',",
            "method: '$GET'",
            "data: {",
            "$1",
            "},",
            "header: {}",
            "success: function(res) {",
            "//res.data",
            "$2",
            "},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "创建一个 WebSocket 连接"
    },
    "cx-onSocketOpen": {
        "prefix": "cx-onSocketOpen",
        "body": [
            "wx.onSocketOpen(function(res) {",
            "$1",
            "});"
        ],
        "description": "监听WebSocket连接打开事件。"
    },
    "cx-onSocketError": {
        "prefix": "cx-onSocketError",
        "body": [
            "wx.onSocketError(function(res){",
            "$1",
            "});"
        ],
        "description": "监听WebSocket错误。"
    },
    "cx-sendSocketMessage": {
        "prefix": "cx-sendSocketMessage",
        "body": [
            "wx.sendSocketMessage({",
            "data: {",
            "$1",
            "},",
            "success: function(res) {",
            "//res.data",
            "$2",
            "},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "通过 WebSocket 连接发送数据，需要先 wx.connectSocket，并在 wx.onSocketOpen 回调之后才能发送。"
    },
    "cx-onSocketMessage": {
        "prefix": "cx-onSocketMessage",
        "body": [
            "wx.onSocketMessage(function(res) {",
            "//res.data",
            "$1",
            "});"
        ],
        "description": "监听WebSocket接受到服务器的消息事件。"
    },
    "cx-closeSocket": {
        "prefix": "cx-closeSocket",
        "body": "wx.closeSocket();",
        "description": "关闭WebSocket连接。"
    },
    "cx-onSocketClose": {
        "prefix": "cx-onSocketClose",
        "body": [
            "wx.onSocketClose(function(res) {",
            "$1",
            "});"
        ],
        "description": "监听WebSocket关闭。"
    },
    "cx-chooseImage": {
        "prefix": "cx-chooseImage",
        "body": [
            "wx.chooseImage({",
            "success: function(res) {",
            "//res.tempFilePaths",
            "},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "从本地相册选择图片或使用相机拍照。"
    },
    "cx-chooseImage-full": {
        "prefix": "cx-chooseImage-full",
        "body": [
            "wx.chooseImage({",
            "count: 9,",
            "sizeType: ['original', 'compressed'],",
            "sourceType: ['album', 'camera'],",
            "success: function(res) {",
            "//res.tempFilePaths",
            "},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "从本地相册选择图片或使用相机拍照。"
    },
    "cx-previewImage": {
        "prefix": "cx-previewImage",
        "body": [
            "wx.previewImage({",
            "urls: [$urls],",
            "success: function(res){},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "预览图片。"
    },
    "cx-previewImage-full": {
        "prefix": "cx-previewImage-full",
        "body": [
            "wx.previewImage({",
            "current: '$url',",
            "urls: [$urls],",
            "success: function(res){},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "预览图片。"
    },
    "cx-getImageInfo": {
        "prefix": "cx-getImageInfo",
        "body": [
            "wx.getImageInfo({",
            " src: '$src',",
            "success: function(res) {",
            "//res.width,height,path",
            "},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "获取图片信息"
    },
    "cx-startRecord": {
        "prefix": "cx-startRecord",
        "body": [
            "wx.startRecord({",
            "success: function(res) {",
            "//res.tempFilePath",
            "$1",
            "},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "开始录音。当主动调用wx.stopRecord，或者录音超过1分钟时自动结束录音，返回录音文件的临时文件路径。当用户离开小程序时，此接口无法调用。"
    },
    "cx-stopRecord": {
        "prefix": "cx-stopRecord",
        "body": "wx.stopRecord();",
        "description": "​ 主动调用停止录音。"
    },
    "cx-playVoice": {
        "prefix": "cx-playVoice",
        "body": [
            "wx.playVoice({",
            "filePath: '$filePath',",
            "success: function(res){},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "开始播放语音，同时只允许一个语音文件正在播放，如果前一个语音文件还没播放完，将中断前一个语音播放。"
    },
    "cx-pauseVoice": {
        "prefix": "cx-pauseVoice",
        "body": "wx.pauseVoice();",
        "description": "暂停正在播放的语音。再次调用wx.playVoice播放同一个文件时，会从暂停处开始播放。如果想从头开始播放，需要先调用 wx.stopVoice。"
    },
    "cx-stopVoice": {
        "prefix": "cx-stopVoice",
        "body": "wx.stopVoice();",
        "description": "结束播放语音。"
    },
    "cx-getBackgroundAudioPlayerState": {
        "prefix": "cx-getBackgroundAudioPlayerState",
        "body": [
            "wx.getBackgroundAudioPlayerState({",
            "success: function(res) {",
            "//res.duration 选定音频的长度（单位：s），只有在当前有音乐播放时返回",
            "//res.currentPosition 选定音频的播放位置（单位：s），只有在当前有音乐播放时返回",
            "//res.status 播放状态（2：没有音乐在播放，1：播放中，0：暂停中）",
            "//res.downloadPercent 音频的下载进度（整数，80 代表 80%），只有在当前有音乐播放时返回",
            "//res.dataUrl 歌曲数据链接，只有在当前有音乐播放时返回",
            "},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "获取后台音乐播放状态。"
    },
    "cx-playBackgroundAudio": {
        "prefix": "cx-playBackgroundAudio",
        "body": [
            "wx.playBackgroundAudio({",
            "dataUrl: '$dataUrl',",
            "title: '$title',",
            "coverImgUrl: '$coverImgUrl',",
            "success: function(res){},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "使用后台播放器播放音乐，对于微信客户端来说，只能同时有一个后台音乐在播放。当用户离开小程序后，音乐将暂停播放；当用户点击“显示在聊天顶部”时，音乐不会暂停播放；当用户在其他小程序占用了音乐播放器，原有小程序内的音乐将停止播放。"
    },
    "cx-pauseBackgroundAudio": {
        "prefix": "cx-pauseBackgroundAudio",
        "body": "wx.pauseBackgroundAudio();",
        "description": "暂停播放音乐。"
    },
    "cx-seekBackgroundAudio": {
        "prefix": "cx-seekBackgroundAudio",
        "body": [
            "wx.seekBackgroundAudio({",
            "position: $position,",
            "success: function(res){},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "控制音乐播放进度。"
    },
    "cx-stopBackgroundAudio": {
        "prefix": "cx-stopBackgroundAudio",
        "body": "wx.stopBackgroundAudio();",
        "description": "停止播放音乐。"
    },
    "cx-onBackgroundAudioPlay": {
        "prefix": "cx-onBackgroundAudioPlay",
        "body": [
            "wx.onBackgroundAudioPlay(function(res) {",
            "$1",
            "});"
        ],
        "description": "监听音乐播放。"
    },
    "cx-onBackgroundAudioPause": {
        "prefix": "cx-onBackgroundAudioPause",
        "body": [
            "wx.onBackgroundAudioPause(function(res) {",
            "$1",
            "});"
        ],
        "description": "监听音乐暂停。"
    },
    "cx-onBackgroundAudioStop": {
        "prefix": "cx-onBackgroundAudioStop",
        "body": [
            "wx.onBackgroundAudioStop(function(res) {",
            "$1",
            "});"
        ],
        "description": "监听音乐停止。"
    },
    "cx-createAudioContext": {
        "prefix": "cx-createAudioContext",
        "body": "that.audioCtx = wx.createAudioContext('$id');",
        "description": "audioContext 通过 audioId 跟一个 <audio/> 组件绑定，通过它可以操作对应的 <audio/> 组件。"
    },
    "cx-audioCtx-setSrc": {
        "prefix": "cx-audioCtx-setSrc",
        "body": "that.audioCtx.setSrc('$1');",
        "description": "音频的地址"
    },
    "cx-audioCtx-play": {
        "prefix": "cx-audioCtx-play",
        "body": "that.audioCtx.play();",
        "description": "播放"
    },
    "cx-audioCtx-pause": {
        "prefix": "cx-audioCtx-pause",
        "body": "that.audioCtx.pause();",
        "description": "暂停"
    },
    "cx-audioCtx-seek": {
        "prefix": "cx-audioCtx-seek",
        "body": "that.audioCtx.seek($position);",
        "description": "跳转到指定位置，单位 s"
    },
    "cx-chooseVideo": {
        "prefix": "cx-chooseVideo",
        "body": [
            "wx.chooseVideo({",
            "maxDuration: 60,",
            "success: function(res) {",
            "//res.tempFilePath 选定视频的临时文件路径",
            "//res.duration 选定视频的时间长度",
            "//res.size 选定视频的数据量大小",
            "//res.height 返回选定视频的长",
            "//res.width 返回选定视频的宽",
            "},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "拍摄视频或从手机相册中选视频，返回视频的临时文件路径。"
    },
    "cx-chooseVideo-full": {
        "prefix": "cx-chooseVideo-full",
        "body": [
            "wx.chooseVideo({",
            "sourceType: ['album','camera'],",
            "maxDuration: 60,",
            "camera: 'back',//front: 前置，back: 后置",
            "success: function(res) {",
            "//res.tempFilePath 选定视频的临时文件路径",
            "//res.duration 选定视频的时间长度",
            "//res.size 选定视频的数据量大小",
            "//res.height 返回选定视频的长",
            "//res.width 返回选定视频的宽",
            "},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "拍摄视频或从手机相册中选视频，返回视频的临时文件路径。"
    },
    "cx-createVideoContext": {
        "prefix": "cx-createVideoContext",
        "body": "that.videoCtx = wx.createVideoContext('$id');",
        "description": "创建并返回 video 上下文 videoContext 对象"
    },
    "cx-videoCtx-play": {
        "prefix": "cx-videoCtx-play",
        "body": "that.videoCtx.play();",
        "description": "播放"
    },
    "cx-videoCtx-pause": {
        "prefix": "cx-videoCtx-pause",
        "body": "that.videoCtx.pause();",
        "description": "暂停"
    },
    "cx-videoCtx-seek": {
        "prefix": "cx-videoCtx-seek",
        "body": "that.videoCtx.seek($position);",
        "description": "跳转到指定位置，单位 s"
    },
    "cx-videoCtx-sendDanmu": {
        "prefix": "cx-videoCtx-sendDanmu",
        "body": [
            "that.videoCtx.sendDanmu({",
            "text: '$text'",
            "color: '$color'",
            "});"
        ],
        "description": "发送弹幕，danmu 包含两个属性 text, color。"
    },
    "cx-saveFile": {
        "prefix": "cx-saveFile",
        "body": [
            "wx.saveFile({",
            "tempFilePath: '$tempFilePath',",
            "success: function(res) {",
            "//res.savedFilePath",
            "},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "保存文件到本地。"
    },
    "cx-getSavedFileList": {
        "prefix": "cx-getSavedFileList",
        "body": [
            "wx.getSavedFileList({",
            "success: function(res) {",
            "//res.errMsg 接口调用结果",
            "//res.fileList 文件列表",
            "//res.fileList[0].filePath 文件的本地路径",
            "//res.fileList[0].createTime 文件的保存时的时间戳，从1970/01/01 08:00:00 到当前时间的秒数",
            "//res.fileList[0].size 文件大小，单位B",
            "},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "获取本地已保存的文件列表"
    },
    "cx-getSavedFileInfo": {
        "prefix": "cx-getSavedFileInfo",
        "body": [
            "wx.getSavedFileInfo({",
            "filePath: '$filePath',",
            "success: function(res) {",
            "//res.errMsg 接口调用结果",
            "//res.size 文件大小，单位B",
            "//res.createTime 文件的保存是的时间戳，从1970/01/01 08:00:00 到当前时间的秒数",
            "},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "获取本地文件的文件信息"
    },
    "cx-removeSavedFile": {
        "prefix": "cx-removeSavedFile",
        "body": [
            "wx.removeSavedFile({",
            "filePath: '$filePath',",
            "success: function(res) {",
            "$1",
            "},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "删除本地存储的文件"
    },
    "cx-openDocument": {
        "prefix": "cx-openDocument",
        "body": [
            "wx.openDocument({",
            "filePath: '$filePath',",
            "success: function(res) {",
            "$1",
            "},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "新开页面打开文档，支持格式：doc, xls, ppt, pdf, docx, xlsx, pptx"
    },
    "cx-setStorage": {
        "prefix": "cx-setStorage",
        "body": [
            "wx.setStorage({",
            "key: '$key',",
            "data: $data,",
            "});"
        ],
        "description": "将数据存储在本地缓存中指定的 key 中，会覆盖掉原来该 key 对应的内容，这是一个异步接口。"
    },
    "cx-setStorage-full": {
        "prefix": "cx-setStorage-full",
        "body": [
            "wx.setStorage({",
            "key: '$key',",
            "data: $data,",
            "success: function(res){},",
            "fail: function(err) {},",
            "complete: function() {}",
            "});"
        ],
        "description": "将数据存储在本地缓存中指定的 key 中，会覆盖掉原来该 key 对应的内容，这是一个异步接口。"
    },
    "cx-setStorageSync": {
        "prefix": "cx-setStorageSync",
        "body": [
            "try {",
            "wx.setStorageSync('$key', $data);",
            "} catch (e) {}"
        ],
        "description": "将 data 存储在本地缓存中指定的 key 中，会覆盖掉原来该 key 对应的内容，这是一个同步接口。"
    },
    "cx-getStorage": {
        "prefix": "cx-getStorage",
        "body": [
            "wx.getStorage({",
            "key: '$key',",
            "success: function(res) {",
            "//res.data",
            "$1",
            "},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "从本地缓存中异步获取指定 key 对应的内容。"
    },
    "cx-getStorageSync": {
        "prefix": "cx-getStorageSync",
        "body": [
            "try {",
            "let $value = wx.getStorageSync('$key');",
            "if ($value) {",
            "$1",
            "}",
            "} catch (e) {}"
        ],
        "description": "从本地缓存中同步获取指定 key 对应的内容。"
    },
    "cx-getStorageInfo": {
        "prefix": "cx-getStorageInfo",
        "body": [
            "wx.getStorageInfo({",
            "success: function(res) {",
            "//res.keys 当前storage中所有的key",
            "//res.currentSize 当前占用的空间大小, 单位kb",
            "//res.limitSize 限制的空间大小，单位kb",
            "},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "异步获取当前storage的相关信息"
    },
    "cx-getStorageInfoSync": {
        "prefix": "cx-getStorageInfoSync",
        "body": [
            "try {",
            "let res = wx.getStorageInfoSync();",
            "//res.keys 当前storage中所有的key",
            "//res.currentSize 当前占用的空间大小, 单位kb",
            "//res.limitSize 限制的空间大小，单位kb",
            "} catch (e) {}"
        ],
        "description": "同步获取当前storage的相关信息"
    },
    "cx-removeStorage": {
        "prefix": "cx-removeStorage",
        "body": [
            "wx.removeStorage({",
            "key: '$key',",
            "success: function(res) {",
            "//res.data",
            "$1",
            "},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "从本地缓存中异步移除指定 key 。"
    },
    "cx-removeStorageSync": {
        "prefix": "cx-removeStorageSync",
        "body": [
            "try {",
            "wx.removeStorageSync('$key');",
            "} catch (e) {}"
        ],
        "description": "从本地缓存中同步移除指定 key 。"
    },
    "cx-clearStorage": {
        "prefix": "cx-clearStorage",
        "body": "wx.clearStorage();",
        "description": "清理本地数据缓存。"
    },
    "cx-clearStorageSync": {
        "prefix": "cx-clearStorageSync",
        "body": [
            "try {",
            "wx.clearStorageSync();",
            "} catch (e) {}"
        ],
        "description": "同步清理本地数据缓存"
    },
    "cx-getLocation": {
        "prefix": "cx-getLocation",
        "body": [
            "wx.getLocation({",
            "type: 'gcj02',//默认为 wgs84 返回 gps 坐标，gcj02 返回可用于wx.openLocation的坐标",
            "success: function(res) {",
            "//res.longitude 经度",
            "//res.latitude 纬度",
            "//res.speed 速度，浮点数，单位m/s",
            "//res.accuracy 位置的精确度",
            "},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "获取当前的地理位置、速度。当用户离开小程序后，此接口无法调用；当用户点击“显示在聊天顶部”时，此接口可继续调用。"
    },
    "cx-chooseLocation": {
        "prefix": "cx-chooseLocation",
        "body": [
            "wx.chooseLocation({",
            "success: function(res) {",
            "//res.name 位置名称",
            "//res.address 详细地址",
            "//res.longitude 经度",
            "//res.latitude 纬度",
            "},",
            "cancel: function(){},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "打开地图选择位置"
    },
    "cx-openLocation": {
        "prefix": "cx-openLocation",
        "body": [
            "wx.openLocation({",
            "longitude: $longitude,",
            "latitude: $latitude,",
            "success: function(res){},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "使用微信内置地图查看位置"
    },
    "cx-openLocation-full": {
        "prefix": "cx-openLocation-full",
        "body": [
            "wx.openLocation({",
            "longitude: $longitude,",
            "latitude: $latitude,",
            "scale: 18,//缩放比例，范围5~18",
            "name: '$name',//位置名",
            "address: '$address',//地址的详细说明",
            "success: function(res){},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "使用微信内置地图查看位置"
    },
    "cx-createMapContext": {
        "prefix": "cx-createMapContext",
        "body": "that.mapCtx = wx.createMapContext('$id');",
        "description": "创建并返回 map 上下文 mapContext 对象"
    },
    "cx-map-getCenterLocation": {
        "prefix": "cx-map-getCenterLocation",
        "body": [
            "that.mapCtx.getCenterLocation({",
            "success: function(res) {",
            "//res.longitude 经度",
            "//res.latitude 纬度",
            "},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "获取当前地图中心的经纬度，返回的是 gcj02 坐标系，可以用于 wx.openLocation"
    },
    "cx-map-moveToLocation": {
        "prefix": "cx-map-moveToLocation",
        "body": "that.mapCtx.moveToLocation();",
        "description": "将地图中心移动到当前定位点，需要配合map组件的show-location使用"
    },
    "cx-getSystemInfo": {
        "prefix": "cx-getSystemInfo",
        "body": [
            "wx.getSystemInfo({",
            "success: function(res) {",
            "//res.model 手机型号",
            "//res.pixelRatio 设备像素比",
            "//res.windowWidth 窗口宽度",
            "//res.windowHeight 窗口高度",
            "//res.language 微信设置的语言",
            "//res.version 微信版本号",
            "//res.system 操作系统版本",
            "//res.platform 客户端平台",
            "},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "获取系统信息。"
    },
    "cx-getSystemInfoSync": {
        "prefix": "cx-getSystemInfoSync",
        "body": [
            "try {",
            "let res = wx.getSystemInfoSync();",
            "//res.model 手机型号",
            "//res.pixelRatio 设备像素比",
            "//res.windowWidth 窗口宽度",
            "//res.windowHeight 窗口高度",
            "//res.language 微信设置的语言",
            "//res.version 微信版本号",
            "//res.system 操作系统版本",
            "//res.platform 客户端平台",
            "} catch (e) {}"
        ],
        "description": "获取系统信息同步接口"
    },
    "cx-getNetworkType": {
        "prefix": "cx-getNetworkType",
        "body": [
            "wx.getNetworkType({",
            "success: function(res) {",
            "//res.networkType wifi/2g/3g/4g/unknown(Android下不常见的网络类型)/none(无网络)",
            "},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "获取网络类型。"
    },
    "cx-onAccelerometerChange": {
        "prefix": "cx-onAccelerometerChange",
        "body": [
            "wx.onAccelerometerChange(function(res) {",
            "//res.x X 轴",
            "//res.y Y 轴",
            "//res.z Z 轴",
            "});"
        ],
        "description": "监听重力感应数据，频率：5次/秒"
    },
    "cx-onCompassChange": {
        "prefix": "cx-onCompassChange",
        "body": [
            "wx.onCompassChange(function (res) {",
            "//res.direction 面对的方向度数",
            "});"
        ],
        "description": "监听罗盘数据，频率：5次/秒"
    },
    "cx-makePhoneCall": {
        "prefix": "cx-makePhoneCall",
        "body": [
            "wx.makePhoneCall({",
            "phoneNumber: '$1',",
            "});"
        ],
        "description": "拨打电话"
    },
    "cx-makePhoneCall-full": {
        "prefix": "cx-makePhoneCall-full",
        "body": [
            "wx.makePhoneCall({",
            "phoneNumber: '$1',",
            "success: function(res){},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "拨打电话"
    },
    "cx-scanCode": {
        "prefix": "cx-scanCode",
        "body": [
            "wx.scanCode({",
            "success: function(res) {",
            "//res.result 所扫码的内容",
            "//res.scanType 所扫码的类型",
            "//res.charSet 所扫码的字符集",
            "//res.path 当所扫的码为当前小程序的合法二维码时，会返回此字段，内容为二维码携带的 path",
            "},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "调起客户端扫码界面，扫码成功后返回对应的结果"
    },
    "cx-showToast": {
        "prefix": "cx-showToast",
        "body": [
            "wx.showToast({",
            "title: '$title',",
            "icon: 'success',//success or loading",
            "duration: 1500,",
            "mask: true,",
            "});"
        ],
        "description": "显示消息提示框"
    },
    "cx-showToast-full": {
        "prefix": "cx-showToast-full",
        "body": [
            "wx.showToast({",
            "title: '$title',",
            "icon: 'success',//success or loading",
            "duration: 1500,",
            "mask: true,",
            "success: function(res){},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "显示消息提示框"
    },
    "cx-hideToast": {
        "prefix": "cx-hideToast",
        "body": "wx.hideToast();",
        "description": "隐藏消息提示框"
    },
    "cx-showModal-must": {
        "prefix": "cx-showModal-must",
        "body": [
            "wx.showModal({",
            "title: '$title',",
            "content: '$content',",
            "success: function(res) {",
            "if (res.confirm) {",
            "$1",
            "} else {",
            "$2",
            "}",
            "},",
            "});"
        ],
        "description": "​显示模态弹窗"
    },
    "cx-alert": {
        "prefix": "cx-alert",
        "body": [
            "wx.showModal({",
            "title: '$title',",
            "content: '$content',",
            "showCancel: false,",
            "});"
        ],
        "description": ""
    },
    "cx-showModal": {
        "prefix": "cx-showModal",
        "body": [
            "wx.showModal({",
            "title: '$title',",
            "content: '$content',",
            "showCancel: true,",
            "cancelText: '取消',",
            "cancelColor: '#000000',",
            "confirmText: '确定',",
            "confirmColor: '#3CC51F',",
            "success: function(res) {",
            "if (res.confirm) {",
            "$1",
            "} else {",
            "$2",
            "}",
            "},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": ""
    },
    "cx-showActionSheet": {
        "prefix": "cx-showActionSheet",
        "body": [
            "wx.showActionSheet({",
            "itemList: [$item],",
            "success: function(res) {",
            "//res.tapIndex 用户点击的按钮，从上到下的顺序，从0开始",
            "},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "显示操作菜单"
    },
    "cx-showActionSheet-full": {
        "prefix": "cx-showActionSheet-full",
        "body": [
            "wx.showActionSheet({",
            "itemList: [$item],",
            "itemColor: '#000000',",
            "success: function(res) {",
            "//res.tapIndex 用户点击的按钮，从上到下的顺序，从0开始",
            "},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "显示操作菜单"
    },
    "cx-setNavigationBarTitle": {
        "prefix": "cx-setNavigationBarTitle",
        "body": [
            "wx.setNavigationBarTitle({",
            "title: '$title'",
            "});"
        ],
        "description": "动态设置当前页面的标题。"
    },
    "cx-showNavigationBarLoading": {
        "prefix": "cx-showNavigationBarLoading",
        "body": "wx.showNavigationBarLoading();",
        "description": "在当前页面显示导航条加载动画。"
    },
    "cx-hideNavigationBarLoading": {
        "prefix": "cx-hideNavigationBarLoading",
        "body": "wx.hideNavigationBarLoading();",
        "description": "隐藏导航条加载动画。"
    },
    "cx-navigateTo": {
        "prefix": "cx-navigateTo",
        "body": [
            "wx.navigateTo({",
            "url: '$url'",
            "});"
        ],
        "description": "保留当前页面，跳转到应用内的某个页面，使用wx.navigateBack可以返回到原页面。"
    },
    "cx-redirectTo": {
        "prefix": "cx-redirectTo",
        "body": [
            "wx.redirectTo({",
            "url: '$url'",
            "});"
        ],
        "description": "关闭当前页面，跳转到应用内的某个页面。"
    },
    "cx-switchTab": {
        "prefix": "cx-switchTab",
        "body": [
            "wx.switchTab({",
            "url: '$url'",
            "});"
        ],
        "description": "跳转到 tabBar 页面，并关闭其他所有非 tabBar 页面"
    },
    "cx-navigateBack": {
        "prefix": "cx-navigateBack",
        "body": [
            "wx.navigateBack();"
        ],
        "description": "关闭当前页面，返回上一页面或多级页面。可通过 getCurrentPages()) 获取当前的页面栈，决定需要返回几层。"
    },
    "cx-navigateBack-full": {
        "prefix": "cx-navigateBack-full",
        "body": [
            "wx.navigateBack({",
            "delta: $delta//返回的页面数，如果 delta 大于现有页面数，则返回到首页。",
            "});"
        ],
        "description": "关闭当前页面，返回上一页面或多级页面。可通过 getCurrentPages()) 获取当前的页面栈，决定需要返回几层。"
    },
    "cx-animation": {
        "prefix": "cx-animation",
        "body": "let animation = wx.createAnimation();",
        "description": ""
    },
    "cx-animation-full": {
        "prefix": "cx-animation-full",
        "body": [
            "let animation = wx.createAnimation({",
            "duration: 400,//动画持续时间，单位ms",
            "timingFunction: 'linear',//定义动画的效果，有效值：'linear','ease','ease-in','ease-in-out','ease-out','step-start','step-end'",
            "transformOrigin: '50% 50% 0',",
            "delay: 0//动画延迟时间",
            "});"
        ],
        "description": "创建一个动画实例animation。调用实例的方法来描述动画。最后通过动画实例的export方法导出动画数据传递给组件的animation属性。"
    },
    "cx-animation-step": {
        "prefix": "cx-animation-step",
        "body": "animation.step();",
        "description": "调用动画操作方法后要调用 step() 来表示一组动画完成，可以在一组动画中调用任意多个动画方法，一组动画中的所有动画会同时开始，一组动画完成后才会进行下一组动画。step 可以传入一个跟 wx.createAnimation() 一样的配置参数用于指定当前组动画的配置。"
    },
    "cx-animation-step-full": {
        "prefix": "cx-animation-step-full",
        "body": [
            "animation.step({",
            "duration: 400,//动画持续时间，单位ms",
            "timingFunction: 'linear',//定义动画的效果，有效值：'linear','ease','ease-in','ease-in-out','ease-out','step-start','step-end'",
            "transformOrigin: '50% 50% 0',",
            "delay: 0//动画延迟时间",
            "});"
        ],
        "description": "调用动画操作方法后要调用 step() 来表示一组动画完成，可以在一组动画中调用任意多个动画方法，一组动画中的所有动画会同时开始，一组动画完成后才会进行下一组动画。step 可以传入一个跟 wx.createAnimation() 一样的配置参数用于指定当前组动画的配置。"
    },
    "cx-animation-export": {
        "prefix": "cx-animation-export",
        "body": "animation.export()",
        "description": "通过动画实例的export方法导出动画数据传递给组件的animation属性。每次调用后会清掉之前的动画操作"
    },
    "cx-animation-opacity": {
        "prefix": "cx-animation-opacity",
        "body": "animation.opacity($value);",
        "description": "透明度，参数范围 0~1"
    },
    "cx-animation-backgroundColor": {
        "prefix": "cx-animation-backgroundColor",
        "body": "animation.backgroundColor($color);",
        "description": "颜色值"
    },
    "cx-animation-width": {
        "prefix": "cx-animation-width",
        "body": "animation.width($length);",
        "description": "如果传入 Number 则默认使用 px，可传入其他自定义单位的长度值"
    },
    "cx-animation-height": {
        "prefix": "cx-animation-height",
        "body": "animation.height($length);",
        "description": "如果传入 Number 则默认使用 px，可传入其他自定义单位的长度值"
    },
    "cx-animation-top": {
        "prefix": "cx-animation-top",
        "body": "animation.top($length);",
        "description": "如果传入 Number 则默认使用 px，可传入其他自定义单位的长度值"
    },
    "cx-animation-left": {
        "prefix": "cx-animation-left",
        "body": "animation.left($length);",
        "description": "如果传入 Number 则默认使用 px，可传入其他自定义单位的长度值"
    },
    "cx-animation-bottom": {
        "prefix": "cx-animation-bottom",
        "body": "animation.bottom($length);",
        "description": "如果传入 Number 则默认使用 px，可传入其他自定义单位的长度值"
    },
    "cx-animation-right": {
        "prefix": "cx-animation-right",
        "body": "animation.right($length);",
        "description": "如果传入 Number 则默认使用 px，可传入其他自定义单位的长度值"
    },
    "cx-animation-rotate": {
        "prefix": "cx-animation-rotate",
        "body": "animation.rotate($deg);",
        "description": "deg的范围-180~180，从原点顺时针旋转一个deg角度"
    },
    "cx-animation-rotateX": {
        "prefix": "cx-animation-rotateX",
        "body": "animation.rotateX($deg);",
        "description": "deg的范围-180~180，在X轴旋转一个deg角度"
    },
    "cx-animation-rotateY": {
        "prefix": "cx-animation-rotateY",
        "body": "animation.rotateY($deg);",
        "description": "deg的范围-180~180，在Y轴旋转一个deg角度"
    },
    "cx-animation-rotateZ": {
        "prefix": "cx-animation-rotateZ",
        "body": "animation.rotateZ($deg);",
        "description": "deg的范围-180~180，在Z轴旋转一个deg角度"
    },
    "cx-animation-rotate3d": {
        "prefix": "cx-animation-rotate3d",
        "body": "animation.rotate3d($x, $y, $z, $deg);",
        "description": "同transform-function rotate3d"
    },
    "cx-animation-scale": {
        "prefix": "cx-animation-scale",
        "body": "animation.scale($sx, $sy);",
        "description": "一个参数时，表示在X轴、Y轴同时缩放sx倍数；两个参数时表示在X轴缩放sx倍数，在Y轴缩放sy倍数"
    },
    "cx-animation-scaleX": {
        "prefix": "cx-animation-scaleX",
        "body": "animation.scaleX($sx);",
        "description": "在X轴缩放sx倍数"
    },
    "cx-animation-scaleY": {
        "prefix": "cx-animation-scaleY",
        "body": "animation.scaleY($sy);",
        "description": "在Y轴缩放sy倍数"
    },
    "cx-animation-scaleZ": {
        "prefix": "cx-animation-scaleZ",
        "body": "animation.scaleZ($sz);",
        "description": "在Z轴缩放sz倍数"
    },
    "cx-animation-scale3d": {
        "prefix": "cx-animation-scale3d",
        "body": "animation.scale3d($sx, $sy, $sz);",
        "description": "在X轴缩放sx倍数，在Y轴缩放sy倍数，在Z轴缩放sz倍数"
    },
    "cx-animation-translate": {
        "prefix": "cx-animation-translate",
        "body": "animation.translate($tx, $ty);",
        "description": "一个参数时，表示在X轴偏移tx，单位px；两个参数时，表示在X轴偏移tx，在Y轴偏移ty，单位px。"
    },
    "cx-animation-translateX": {
        "prefix": "cx-animation-translateX",
        "body": "animation.translateX($tx);",
        "description": "在X轴偏移tx，单位px"
    },
    "cx-animation-translateY": {
        "prefix": "cx-animation-translateY",
        "body": "animation.translateY($ty);",
        "description": "在Y轴偏移ty，单位px"
    },
    "cx-animation-translateZ": {
        "prefix": "cx-animation-translateZ",
        "body": "animation.translateZ($tz);",
        "description": "在Z轴偏移tz，单位px"
    },
    "cx-animation-translate3d": {
        "prefix": "cx-animation-translate3d",
        "body": "animation.translate3d($tx, $ty, $tz);",
        "description": "在X轴偏移tx，在Y轴偏移ty，在Z轴偏移tz，单位px"
    },
    "cx-animation-skew": {
        "prefix": "cx-animation-skew",
        "body": "animation.skew($ax, $ay);",
        "description": "参数范围-180~180；一个参数时，Y轴坐标不变，X轴坐标延顺时针倾斜ax度；两个参数时，分别在X轴倾斜ax度，在Y轴倾斜ay度"
    },
    "cx-animation-skewX": {
        "prefix": "cx-animation-skewX",
        "body": "animation.skewX($ax);",
        "description": "参数范围-180~180；Y轴坐标不变，X轴坐标延顺时针倾斜ax度"
    },
    "cx-animation-skewY": {
        "prefix": "cx-animation-skewY",
        "body": "animation.skewY($ay);",
        "description": "参数范围-180~180；X轴坐标不变，Y轴坐标延顺时针倾斜ay度"
    },
    "cx-animation-matrix": {
        "prefix": "cx-animation-matrix",
        "body": "animation.matrix($a, $b, $c, $d, $tx, $ty);",
        "description": "同transform-function matrix"
    },
    "cx-animation-matrix3d": {
        "prefix": "cx-animation-matrix3d",
        "body": "animation.matrix3d($a1, $b1, $c1, $d1, $a2, $b2, $c2, $d2, $a3, $b3, $c3, $d3, $a4, $b4, $c4, $d4);",
        "description": "同transform-function matrix3d"
    },
    "cx-createCanvasContext": {
        "prefix": "cx-createCanvasContext",
        "body": "that.ctx = wx.createCanvasContext('$id');",
        "description": "创建 canvas 绘图上下文（指定 canvasId）"
    },
    "cx-canvasToTempFilePath": {
        "prefix": "cx-canvasToTempFilePath",
        "body": [
            "wx.canvasToTempFilePath({",
            "canvasId: '$id',",
            "success: function(res) {",
            "//res.tempFilePath",
            "$1",
            "},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "把当前画布的内容导出生成图片，并返回文件路径"
    },
    "cx-createCircularGradient": {
        "prefix": "cx-createCircularGradient",
        "body": "const grd = ctx.createCircularGradient($x, $y, $r);",
        "description": "创建一个从圆心开始的渐变"
    },
    "cx-setFillStyle": {
        "prefix": "cx-setFillStyle",
        "body": "ctx.setFillStyle('$color');",
        "description": "设置填充色，默认颜色为 black。"
    },
    "cx-setStrokeStyle": {
        "prefix": "cx-setStrokeStyle",
        "body": "ctx.setStrokeStyle('$color');",
        "description": "设置边框颜色，默认颜色为 black。"
    },
    "cx-setShadow": {
        "prefix": "cx-setShadow",
        "body": "ctx.setShadow($offsetX, $offsetY, $blur, '$color');",
        "description": "设置阴影样式，offsetX 默认值为0， offsetY 默认值为0， blur 默认值为0，color 默认值为 black。"
    },
    "cx-setLineWidth": {
        "prefix": "cx-setLineWidth",
        "body": "ctx.setLineWidth($1);",
        "description": "设置线条的宽度。"
    },
    "cx-setLineCap": {
        "prefix": "cx-setLineCap",
        "body": "ctx.setLineCap('$1');",
        "description": "设置线条的端点样式('butt'、'round'、'square')。"
    },
    "cx-setLineJoin": {
        "prefix": "cx-setLineJoin",
        "body": "ctx.setLineJoin('$1');",
        "description": "设置线条的交点样式('bevel'、'round'、'miter')。"
    },
    "cx-setMiterLimit": {
        "prefix": "cx-setMiterLimit",
        "body": "ctx.setMiterLimit($1);",
        "description": "设置最大斜接长度，斜接长度指的是在两条线交汇处内角和外角之间的距离。 当 setLineJoin() 为 miter 时才有效。超过最大倾斜长度的，连接处将以 lineJoin 为 bevel 来显示"
    },
    "cx-setFontSize": {
        "prefix": "cx-setFontSize",
        "body": "ctx.setFontSize($1);",
        "description": "设置字体的字号。"
    },
    "cx-setGlobalAlpha": {
        "prefix": "cx-setGlobalAlpha",
        "body": "ctx.setGlobalAlpha($1);",
        "description": "设置全局画笔透明度，0 表示完全透明，1 表示完全不透明。"
    },
    "cx-draw": {
        "prefix": "cx-draw",
        "body": "ctx.draw($reserve);",
        "description": "将之前在绘图上下文中的描述（路径、变形、样式）画到 canvas 中。\n本次绘制是否接着上一次绘制，即reserve参数为false，则在本次调用drawCanvas绘制之前native层应先清空画布再继续绘制；若reserver参数为true，则保留当前画布上的内容，本次调用drawCanvas绘制的内容覆盖在上面，默认 false"
    },
    "cx-onPullDownRefresh": {
        "prefix": "cx-onPullDownRefresh",
        "body": [
            "onPullDownRefresh: function(){",
            "$1",
            "}"
        ],
        "description": "在 Page 中定义 onPullDownRefresh 处理函数，监听该页面用户下拉刷新事件。"
    },
    "cx-stopPullDownRefresh": {
        "prefix": "cx-stopPullDownRefresh",
        "body": "wx.stopPullDownRefresh();",
        "description": "停止当前页面下拉刷新。"
    },
    "cx-login": {
        "prefix": "cx-login",
        "body": [
            "wx.login({",
            "success: function(res) {",
            "//res.errMsg 调用结果",
            "//res.code 用户允许登录后，回调内容会带上 code（有效期五分钟），开发者需要将 code 发送到开发者服务器后台，使用code 换取 session_key api，将 code 换成 openid 和 session_key",
            "},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "调用接口获取登录凭证（code）进而换取用户登录态信息，包括用户的唯一标识（openid） 及本次登录的 会话密钥（session_key）。用户数据的加解密通讯需要依赖会话密钥完成。"
    },
    "cx-checkSession": {
        "prefix": "cx-checkSession",
        "body": [
            "wx.checkSession({",
            "success: function(res){",
            "//session 未过期，并且在本生命周期一直有效",
            "},",
            "fail: function(err){,",
            "//登录态过期 wx.login() 重新登录",
            "},",
            "complete: function(){}",
            "});"
        ],
        "description": "检查登录态是否过期"
    },
    "cx-getUserInfo": {
        "prefix": "cx-getUserInfo",
        "body": [
            "wx.getUserInfo({",
            "success: function(res) {",
            "//res.userInfo 用户信息对象(nickName、avatarUrl、gender、province、city、country)，不包含 openid 等敏感信息",
            "//res.rawData 不包括敏感信息的原始数据字符串，用于计算签名。",
            "//res.signature 使用 sha1( rawData + sessionkey ) 得到字符串，用于校验用户信息。",
            "//res.encryptedData 包括敏感数据在内的完整用户信息的加密数据，详细见加密数据解密算法",
            "//res.iv 加密算法的初始向量，详细见加密数据解密算法",
            "},",
            "fail: function(err){},",
            "complete: function(){}",
            "});"
        ],
        "description": "获取用户信息，需要先调用 wx.login 接口。"
    },
    "cx-requestPayment": {
        "prefix": "cx-requestPayment",
        "body": [
            "wx.requestPayment({",
            "timeStamp : '$timeStamp',//时间戳从1970年1月1日00:00:00至今的秒数,即当前的时间",
            "nonceStr : '$nonceStr',//随机字符串，长度为32个字符以下。",
            "package : '$package',//统一下单接口返回的 prepay_id 参数值，提交格式如：prepay_id=*",
            "signType : '$signType',//签名算法，暂支持 MD5",
            "paySign : '$paySign',//签名,具体签名方案参见微信公众号支付帮助文档;",
            "success: function(res) {",
            "//requestPayment:ok 调用支付成功",
            "},",
            "fail: function(err) {",
            "//requestPayment:fail cancel 用户取消支付",
            "//requestPayment:fail (detail message)调用支付失败，其中 detail message 为后台返回的详细失败原因",
            "},",
            "complete: function(){}",
            "});"
        ],
        "description": "发起微信支付。"
    },
    "cx-data": {
        "prefix": "cx-data",
        "body": "e.currentTarget.dataset.$key",
        "description": ""
    },
    "cx-navbar": {
        "prefix": "cx-navbar",
        "body": [
            "onLoad: function () {",
            "var that = this;",
            "",
            "let tabs = [$tab];",
            "let activeIndex = 0;",
            "let sliderOffset = 0;",
            "",
            "wx.getSystemInfo({",
            "success: function (res) {",
            "that.setData({",
            "tabs: tabs,",
            "activeIndex: activeIndex,",
            "sliderOffset: sliderOffset,",
            "sliderOffset: res.windowWidth / tabs.length * activeIndex",
            "});",
            "},",
            "tabClick: function (e) {",
            "var that = this;",
            "",
            "that.setData({",
            "sliderOffset: e.currentTarget.offsetLeft,",
            "activeIndex: e.currentTarget.id",
            "});",
            "",
            "switch (e.currentTarget.id) {",
            "case $value:",
            "",
            "break;",
            "default:",
            "break;",
            "}",
            "},"
        ],
        "description": ""
    }
}